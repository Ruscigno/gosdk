// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: transaction.proto

package v3

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TransactionType: Transaction type
type TransactionType int32

const (
	TransactionType_TRANSACTION_TYPE_BUY                      TransactionType = 0  //Buy
	TransactionType_TRANSACTION_TYPE_SELL                     TransactionType = 1  //Sell
	TransactionType_TRANSACTION_TYPE_BALANCE                  TransactionType = 2  //Balance
	TransactionType_TRANSACTION_TYPE_CREDIT                   TransactionType = 3  //Credit
	TransactionType_TRANSACTION_TYPE_CHARGE                   TransactionType = 4  //Additional charge
	TransactionType_TRANSACTION_TYPE_CORRECTION               TransactionType = 5  //Correction
	TransactionType_TRANSACTION_TYPE_BONUS                    TransactionType = 6  //Bonus
	TransactionType_TRANSACTION_TYPE_COMMISSION               TransactionType = 7  //Additional commission
	TransactionType_TRANSACTION_TYPE_COMMISSION_DAILY         TransactionType = 8  //Daily commission
	TransactionType_TRANSACTION_TYPE_COMMISSION_MONTHLY       TransactionType = 9  //Monthly commission
	TransactionType_TRANSACTION_TYPE_COMMISSION_AGENT_DAILY   TransactionType = 10 //Daily agent commission
	TransactionType_TRANSACTION_TYPE_COMMISSION_AGENT_MONTHLY TransactionType = 11 //Monthly agent commission
	TransactionType_TRANSACTION_TYPE_INTEREST                 TransactionType = 12 //Interest rate
	TransactionType_TRANSACTION_TYPE_BUY_CANCELED             TransactionType = 13 //Canceled buy transaction.
	TransactionType_TRANSACTION_TYPE_SELL_CANCELED            TransactionType = 14 //Canceled sell transaction.
	TransactionType_TRANSACTION_DIVIDEND                      TransactionType = 15 //Dividend operations
	TransactionType_TRANSACTION_DIVIDEND_FRANKED              TransactionType = 16 //Franked (non-taxable) dividend operations
	TransactionType_TRANSACTION_TAX                           TransactionType = 17 //Tax charges
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0:  "TRANSACTION_TYPE_BUY",
		1:  "TRANSACTION_TYPE_SELL",
		2:  "TRANSACTION_TYPE_BALANCE",
		3:  "TRANSACTION_TYPE_CREDIT",
		4:  "TRANSACTION_TYPE_CHARGE",
		5:  "TRANSACTION_TYPE_CORRECTION",
		6:  "TRANSACTION_TYPE_BONUS",
		7:  "TRANSACTION_TYPE_COMMISSION",
		8:  "TRANSACTION_TYPE_COMMISSION_DAILY",
		9:  "TRANSACTION_TYPE_COMMISSION_MONTHLY",
		10: "TRANSACTION_TYPE_COMMISSION_AGENT_DAILY",
		11: "TRANSACTION_TYPE_COMMISSION_AGENT_MONTHLY",
		12: "TRANSACTION_TYPE_INTEREST",
		13: "TRANSACTION_TYPE_BUY_CANCELED",
		14: "TRANSACTION_TYPE_SELL_CANCELED",
		15: "TRANSACTION_DIVIDEND",
		16: "TRANSACTION_DIVIDEND_FRANKED",
		17: "TRANSACTION_TAX",
	}
	TransactionType_value = map[string]int32{
		"TRANSACTION_TYPE_BUY":                      0,
		"TRANSACTION_TYPE_SELL":                     1,
		"TRANSACTION_TYPE_BALANCE":                  2,
		"TRANSACTION_TYPE_CREDIT":                   3,
		"TRANSACTION_TYPE_CHARGE":                   4,
		"TRANSACTION_TYPE_CORRECTION":               5,
		"TRANSACTION_TYPE_BONUS":                    6,
		"TRANSACTION_TYPE_COMMISSION":               7,
		"TRANSACTION_TYPE_COMMISSION_DAILY":         8,
		"TRANSACTION_TYPE_COMMISSION_MONTHLY":       9,
		"TRANSACTION_TYPE_COMMISSION_AGENT_DAILY":   10,
		"TRANSACTION_TYPE_COMMISSION_AGENT_MONTHLY": 11,
		"TRANSACTION_TYPE_INTEREST":                 12,
		"TRANSACTION_TYPE_BUY_CANCELED":             13,
		"TRANSACTION_TYPE_SELL_CANCELED":            14,
		"TRANSACTION_DIVIDEND":                      15,
		"TRANSACTION_DIVIDEND_FRANKED":              16,
		"TRANSACTION_TAX":                           17,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_transaction_proto_enumTypes[0].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_transaction_proto_enumTypes[0]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{0}
}

// TransactionEntry: Transaction entry - entry in, entry out, reverse
type TransactionEntry int32

const (
	TransactionEntry_TRANSACTION_ENTRY_IN     TransactionEntry = 0 //Entry in
	TransactionEntry_TRANSACTION_ENTRY_OUT    TransactionEntry = 1 //Entry out
	TransactionEntry_TRANSACTION_ENTRY_INOUT  TransactionEntry = 2 //Reverse
	TransactionEntry_TRANSACTION_ENTRY_OUT_BY TransactionEntry = 3 //Close a position by an opposite one
)

// Enum value maps for TransactionEntry.
var (
	TransactionEntry_name = map[int32]string{
		0: "TRANSACTION_ENTRY_IN",
		1: "TRANSACTION_ENTRY_OUT",
		2: "TRANSACTION_ENTRY_INOUT",
		3: "TRANSACTION_ENTRY_OUT_BY",
	}
	TransactionEntry_value = map[string]int32{
		"TRANSACTION_ENTRY_IN":     0,
		"TRANSACTION_ENTRY_OUT":    1,
		"TRANSACTION_ENTRY_INOUT":  2,
		"TRANSACTION_ENTRY_OUT_BY": 3,
	}
)

func (x TransactionEntry) Enum() *TransactionEntry {
	p := new(TransactionEntry)
	*p = x
	return p
}

func (x TransactionEntry) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionEntry) Descriptor() protoreflect.EnumDescriptor {
	return file_transaction_proto_enumTypes[1].Descriptor()
}

func (TransactionEntry) Type() protoreflect.EnumType {
	return &file_transaction_proto_enumTypes[1]
}

func (x TransactionEntry) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionEntry.Descriptor instead.
func (TransactionEntry) EnumDescriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{1}
}

type TransactionReason int32

const (
	TransactionReason_TRANSACTION_REASON_CLIENT   TransactionReason = 0 //The transaction was executed as a result of activation of an order placed from a desktop terminal
	TransactionReason_TRANSACTION_REASON_MOBILE   TransactionReason = 1 //The transaction was executed as a result of activation of an order placed from a mobile application
	TransactionReason_TRANSACTION_REASON_WEB      TransactionReason = 2 //The transaction was executed as a result of activation of an order placed from the web platform
	TransactionReason_TRANSACTION_REASON_EXPERT   TransactionReason = 3 //The transaction was executed as a result of activation of an order placed from an MQL5 program, i.e. an Expert Advisor or a script
	TransactionReason_TRANSACTION_REASON_SL       TransactionReason = 4 //The transaction was executed as a result of Stop Loss activation
	TransactionReason_TRANSACTION_REASON_TP       TransactionReason = 5 //The transaction was executed as a result of Take Profit activation
	TransactionReason_TRANSACTION_REASON_SO       TransactionReason = 6 //The transaction was executed as a result of the Stop Out event
	TransactionReason_TRANSACTION_REASON_ROLLOVER TransactionReason = 7 //The transaction was executed due to a rollover
	TransactionReason_TRANSACTION_REASON_VMARGIN  TransactionReason = 8 //The transaction was executed after charging the variation margin
	TransactionReason_TRANSACTION_REASON_SPLIT    TransactionReason = 9 //The transaction was executed after the split (price reduction) of an instrument, which had an open position during split announcement
)

// Enum value maps for TransactionReason.
var (
	TransactionReason_name = map[int32]string{
		0: "TRANSACTION_REASON_CLIENT",
		1: "TRANSACTION_REASON_MOBILE",
		2: "TRANSACTION_REASON_WEB",
		3: "TRANSACTION_REASON_EXPERT",
		4: "TRANSACTION_REASON_SL",
		5: "TRANSACTION_REASON_TP",
		6: "TRANSACTION_REASON_SO",
		7: "TRANSACTION_REASON_ROLLOVER",
		8: "TRANSACTION_REASON_VMARGIN",
		9: "TRANSACTION_REASON_SPLIT",
	}
	TransactionReason_value = map[string]int32{
		"TRANSACTION_REASON_CLIENT":   0,
		"TRANSACTION_REASON_MOBILE":   1,
		"TRANSACTION_REASON_WEB":      2,
		"TRANSACTION_REASON_EXPERT":   3,
		"TRANSACTION_REASON_SL":       4,
		"TRANSACTION_REASON_TP":       5,
		"TRANSACTION_REASON_SO":       6,
		"TRANSACTION_REASON_ROLLOVER": 7,
		"TRANSACTION_REASON_VMARGIN":  8,
		"TRANSACTION_REASON_SPLIT":    9,
	}
)

func (x TransactionReason) Enum() *TransactionReason {
	p := new(TransactionReason)
	*p = x
	return p
}

func (x TransactionReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionReason) Descriptor() protoreflect.EnumDescriptor {
	return file_transaction_proto_enumTypes[2].Descriptor()
}

func (TransactionReason) Type() protoreflect.EnumType {
	return &file_transaction_proto_enumTypes[2]
}

func (x TransactionReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionReason.Descriptor instead.
func (TransactionReason) EnumDescriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{2}
}

// Transaction: A transaction is the reflection of the fact of a trade operation execution based on an order that contains a trade request
type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId       int64                  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	TransactionId   int64                  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	TransactionSeq  int64                  `protobuf:"varint,3,opt,name=transaction_seq,json=transactionSeq,proto3" json:"transaction_seq,omitempty"`
	OrderId         int64                  `protobuf:"varint,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	PositionId      int64                  `protobuf:"varint,5,opt,name=position_id,json=positionId,proto3" json:"position_id,omitempty"`
	ExternalId      string                 `protobuf:"bytes,6,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Symbol          string                 `protobuf:"bytes,7,opt,name=symbol,proto3" json:"symbol,omitempty"`
	TransactionTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=transaction_time,json=transactionTime,proto3" json:"transaction_time,omitempty"`
	TransactionType TransactionType        `protobuf:"varint,9,opt,name=transaction_type,json=transactionType,proto3,enum=tickerbeats.v3.TransactionType" json:"transaction_type,omitempty"`
	Entry           TransactionEntry       `protobuf:"varint,10,opt,name=entry,proto3,enum=tickerbeats.v3.TransactionEntry" json:"entry,omitempty"`
	Volume          float64                `protobuf:"fixed64,11,opt,name=volume,proto3" json:"volume,omitempty"`
	Price           float64                `protobuf:"fixed64,12,opt,name=price,proto3" json:"price,omitempty"`
	Commission      float64                `protobuf:"fixed64,13,opt,name=commission,proto3" json:"commission,omitempty"`
	Swap            float64                `protobuf:"fixed64,14,opt,name=swap,proto3" json:"swap,omitempty"`
	Profit          float64                `protobuf:"fixed64,15,opt,name=profit,proto3" json:"profit,omitempty"`
	Comment         string                 `protobuf:"bytes,16,opt,name=comment,proto3" json:"comment,omitempty"`
	Magic           int64                  `protobuf:"varint,17,opt,name=magic,proto3" json:"magic,omitempty"`
	Reason          TransactionReason      `protobuf:"varint,18,opt,name=reason,proto3,enum=tickerbeats.v3.TransactionReason" json:"reason,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,97,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Timestamp of creation
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,98,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // Timestamp of last update
	DeletedAt       *timestamppb.Timestamp `protobuf:"bytes,99,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` // Timestamp of deletion
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Transaction) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *Transaction) GetTransactionSeq() int64 {
	if x != nil {
		return x.TransactionSeq
	}
	return 0
}

func (x *Transaction) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *Transaction) GetPositionId() int64 {
	if x != nil {
		return x.PositionId
	}
	return 0
}

func (x *Transaction) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *Transaction) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Transaction) GetTransactionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionTime
	}
	return nil
}

func (x *Transaction) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_TYPE_BUY
}

func (x *Transaction) GetEntry() TransactionEntry {
	if x != nil {
		return x.Entry
	}
	return TransactionEntry_TRANSACTION_ENTRY_IN
}

func (x *Transaction) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Transaction) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Transaction) GetCommission() float64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *Transaction) GetSwap() float64 {
	if x != nil {
		return x.Swap
	}
	return 0
}

func (x *Transaction) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *Transaction) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Transaction) GetMagic() int64 {
	if x != nil {
		return x.Magic
	}
	return 0
}

func (x *Transaction) GetReason() TransactionReason {
	if x != nil {
		return x.Reason
	}
	return TransactionReason_TRANSACTION_REASON_CLIENT
}

func (x *Transaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transaction) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Transaction) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

var File_transaction_proto protoreflect.FileDescriptor

var file_transaction_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x65, 0x61, 0x74, 0x73,
	0x2e, 0x76, 0x33, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x06, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x45, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x4a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x62, 0x65, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x62, 0x65, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x77, 0x61, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x73, 0x77, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x67, 0x69, 0x63,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x12, 0x39, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x65, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x61, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x62, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0xdf, 0x04, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x14, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x42, 0x55, 0x59, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x4c,
	0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x02,
	0x12, 0x1b, 0x0a, 0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x10, 0x03, 0x12, 0x1b, 0x0a,
	0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x42, 0x4f, 0x4e, 0x55, 0x53, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x41, 0x49, 0x4c, 0x59, 0x10, 0x08, 0x12,
	0x27, 0x0a, 0x23, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4d,
	0x4f, 0x4e, 0x54, 0x48, 0x4c, 0x59, 0x10, 0x09, 0x12, 0x2b, 0x0a, 0x27, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x41,
	0x49, 0x4c, 0x59, 0x10, 0x0a, 0x12, 0x2d, 0x0a, 0x29, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48,
	0x4c, 0x59, 0x10, 0x0b, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53,
	0x54, 0x10, 0x0c, 0x12, 0x21, 0x0a, 0x1d, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x55, 0x59, 0x5f, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x45, 0x44, 0x10, 0x0d, 0x12, 0x22, 0x0a, 0x1e, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x4c, 0x5f,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x56, 0x49, 0x44, 0x45,
	0x4e, 0x44, 0x10, 0x0f, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x56, 0x49, 0x44, 0x45, 0x4e, 0x44, 0x5f, 0x46, 0x52, 0x41,
	0x4e, 0x4b, 0x45, 0x44, 0x10, 0x10, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x58, 0x10, 0x11, 0x2a, 0x82, 0x01, 0x0a, 0x10,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x14, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x4f, 0x55, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x4e, 0x4f, 0x55, 0x54,
	0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x42, 0x59, 0x10, 0x03,
	0x2a, 0xbc, 0x02, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x49,
	0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x42, 0x49,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x57, 0x45, 0x42, 0x10, 0x02,
	0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x52, 0x54, 0x10, 0x03, 0x12,
	0x19, 0x0a, 0x15, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x4c, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x54, 0x50, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x10, 0x06,
	0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x52, 0x4f, 0x4c, 0x4c, 0x4f, 0x56, 0x45, 0x52, 0x10,
	0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x56, 0x4d, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x10,
	0x08, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x50, 0x4c, 0x49, 0x54, 0x10, 0x09, 0x42,
	0x11, 0x5a, 0x0f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2d, 0x62, 0x65, 0x61, 0x74, 0x73, 0x2f,
	0x76, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transaction_proto_rawDescOnce sync.Once
	file_transaction_proto_rawDescData = file_transaction_proto_rawDesc
)

func file_transaction_proto_rawDescGZIP() []byte {
	file_transaction_proto_rawDescOnce.Do(func() {
		file_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_transaction_proto_rawDescData)
	})
	return file_transaction_proto_rawDescData
}

var file_transaction_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_transaction_proto_goTypes = []interface{}{
	(TransactionType)(0),          // 0: tickerbeats.v3.TransactionType
	(TransactionEntry)(0),         // 1: tickerbeats.v3.TransactionEntry
	(TransactionReason)(0),        // 2: tickerbeats.v3.TransactionReason
	(*Transaction)(nil),           // 3: tickerbeats.v3.Transaction
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_transaction_proto_depIdxs = []int32{
	4, // 0: tickerbeats.v3.Transaction.transaction_time:type_name -> google.protobuf.Timestamp
	0, // 1: tickerbeats.v3.Transaction.transaction_type:type_name -> tickerbeats.v3.TransactionType
	1, // 2: tickerbeats.v3.Transaction.entry:type_name -> tickerbeats.v3.TransactionEntry
	2, // 3: tickerbeats.v3.Transaction.reason:type_name -> tickerbeats.v3.TransactionReason
	4, // 4: tickerbeats.v3.Transaction.created_at:type_name -> google.protobuf.Timestamp
	4, // 5: tickerbeats.v3.Transaction.updated_at:type_name -> google.protobuf.Timestamp
	4, // 6: tickerbeats.v3.Transaction.deleted_at:type_name -> google.protobuf.Timestamp
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_transaction_proto_init() }
func file_transaction_proto_init() {
	if File_transaction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transaction_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transaction_proto_goTypes,
		DependencyIndexes: file_transaction_proto_depIdxs,
		EnumInfos:         file_transaction_proto_enumTypes,
		MessageInfos:      file_transaction_proto_msgTypes,
	}.Build()
	File_transaction_proto = out.File
	file_transaction_proto_rawDesc = nil
	file_transaction_proto_goTypes = nil
	file_transaction_proto_depIdxs = nil
}
